/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ualg.pt.pmfgui;

import java.awt.Color;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import javax.swing.text.html.HTMLEditorKit;
import org.biojava.bio.BioException;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.uald.pt.pmfgui//Main//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "MainTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
        
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "org.uald.pt.pmfgui.MainTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_MainAction",
        preferredID = "MainTopComponent"
)
@Messages({
    "CTL_MainAction=Query Search",
    "CTL_MainTopComponent=Query Search",
    "HINT_MainTopComponent=This is a Query Search window"
})
public final class MainTopComponent extends TopComponent {

    private File proteinDB;
    private File decoyDB;
    private File massList;
    private File contaminantsList;
    public MainTopComponent() {
        initComponents();
        setName(Bundle.CTL_MainTopComponent());
        setToolTipText(Bundle.HINT_MainTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty("print.printable", Boolean.TRUE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldProteinDatabase = new javax.swing.JTextField();
        jButtonIhaveaList = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonOpenProteinDB = new javax.swing.JButton();
        jButtonOpenDecoyDB = new javax.swing.JButton();
        jButtonOpenMassList = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonPrintResults = new javax.swing.JButton();
        jButtonSaveAs = new javax.swing.JButton();
        jTextFieldDecoyDatabase = new javax.swing.JTextField();
        jTextFieldMassList = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneResult = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldExperementName = new javax.swing.JTextField();
        jTextFieldContaminantsList = new javax.swing.JTextField();
        jButtonOpenContaminantsList = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldContaminantsThreshold = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldProteinDatabaseThreshold = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNoMissedCleavages = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxFixedModification = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jComboBoxVariableModification = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jTextFieldTopHits = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldSignificanceThreshold = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jCheckBoxShowMatchedPeptides = new javax.swing.JCheckBox();
        jCheckBoxShowMatchedProteins = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButtonIncreaseTextSize = new javax.swing.JButton();
        jButtonDecreaseTextSize = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel3.text")); // NOI18N

        jTextFieldProteinDatabase.setEditable(false);
        jTextFieldProteinDatabase.setForeground(new java.awt.Color(114, 112, 112));
        jTextFieldProteinDatabase.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldProteinDatabase.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonIhaveaList, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonIhaveaList.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonOpenProteinDB, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonOpenProteinDB.text")); // NOI18N
        jButtonOpenProteinDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenProteinDBActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonOpenDecoyDB, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonOpenDecoyDB.text")); // NOI18N
        jButtonOpenDecoyDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenDecoyDBActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonOpenMassList, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonOpenMassList.text")); // NOI18N
        jButtonOpenMassList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenMassListActionPerformed(evt);
            }
        });

        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ualg/pt/pmfgui/run24.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonSearch, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonSearch.text")); // NOI18N
        jButtonSearch.setToolTipText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonSearch.toolTipText")); // NOI18N
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonPrintResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ualg/pt/pmfgui/print24.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonPrintResults, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonPrintResults.text")); // NOI18N
        jButtonPrintResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintResultsActionPerformed(evt);
            }
        });

        jButtonSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ualg/pt/pmfgui/Save.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonSaveAs, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonSaveAs.text")); // NOI18N
        jButtonSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAsActionPerformed(evt);
            }
        });

        jTextFieldDecoyDatabase.setEditable(false);
        jTextFieldDecoyDatabase.setForeground(new java.awt.Color(114, 112, 112));
        jTextFieldDecoyDatabase.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldDecoyDatabase.text")); // NOI18N

        jTextFieldMassList.setEditable(false);
        jTextFieldMassList.setForeground(new java.awt.Color(114, 112, 112));
        jTextFieldMassList.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldMassList.text")); // NOI18N

        jScrollPane2.setViewportView(jTextPaneResult);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel5.text")); // NOI18N

        jTextFieldExperementName.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldExperementName.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldExperementName.text")); // NOI18N

        jTextFieldContaminantsList.setEditable(false);
        jTextFieldContaminantsList.setForeground(new java.awt.Color(114, 112, 112));
        jTextFieldContaminantsList.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldContaminantsList.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonOpenContaminantsList, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonOpenContaminantsList.text")); // NOI18N
        jButtonOpenContaminantsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenContaminantsListActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel7.text")); // NOI18N

        jTextFieldContaminantsThreshold.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldContaminantsThreshold.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldContaminantsThreshold.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel8.text")); // NOI18N

        jTextFieldProteinDatabaseThreshold.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldProteinDatabaseThreshold.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldProteinDatabaseThreshold.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel9.text")); // NOI18N

        jTextFieldNoMissedCleavages.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldNoMissedCleavages.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldNoMissedCleavages.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel10.text")); // NOI18N

        jComboBoxFixedModification.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "False", "True" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel11.text")); // NOI18N

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jComboBoxVariableModification.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "False", "True" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel12.text")); // NOI18N

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTextFieldTopHits.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldTopHits.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldTopHits.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel13.text")); // NOI18N

        jTextFieldSignificanceThreshold.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldSignificanceThreshold.setText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jTextFieldSignificanceThreshold.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel14.text")); // NOI18N

        jCheckBoxShowMatchedPeptides.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxShowMatchedPeptides, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jCheckBoxShowMatchedPeptides.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBoxShowMatchedProteins, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jCheckBoxShowMatchedProteins.text")); // NOI18N
        jCheckBoxShowMatchedProteins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowMatchedProteinsActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel15.text")); // NOI18N

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel16.text")); // NOI18N

        jLabel17.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel17, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jLabel17.text")); // NOI18N

        jButtonIncreaseTextSize.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonIncreaseTextSize, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonIncreaseTextSize.text")); // NOI18N
        jButtonIncreaseTextSize.setToolTipText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonIncreaseTextSize.toolTipText")); // NOI18N
        jButtonIncreaseTextSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncreaseTextSizeActionPerformed(evt);
            }
        });

        jButtonDecreaseTextSize.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonDecreaseTextSize, org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonDecreaseTextSize.text")); // NOI18N
        jButtonDecreaseTextSize.setToolTipText(org.openide.util.NbBundle.getMessage(MainTopComponent.class, "MainTopComponent.jButtonDecreaseTextSize.toolTipText")); // NOI18N
        jButtonDecreaseTextSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecreaseTextSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextFieldMassList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(jTextFieldDecoyDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldProteinDatabase, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                            .addComponent(jTextFieldContaminantsList))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonOpenContaminantsList)
                                            .addComponent(jButtonOpenMassList)
                                            .addComponent(jButtonOpenDecoyDB)
                                            .addComponent(jButtonOpenProteinDB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonIhaveaList))
                                    .addComponent(jTextFieldExperementName)))
                            .addComponent(jLabel17))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxFixedModification, 0, 1, Short.MAX_VALUE)
                                    .addComponent(jComboBoxVariableModification, 0, 1, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextFieldNoMissedCleavages, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldProteinDatabaseThreshold, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel10)
                                        .addGap(11, 11, 11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldContaminantsThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(6, 6, 6)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jCheckBoxShowMatchedProteins, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCheckBoxShowMatchedPeptides, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldTopHits)
                                            .addComponent(jTextFieldSignificanceThreshold, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSaveAs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPrintResults)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIncreaseTextSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDecreaseTextSize, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldProteinDatabaseThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldNoMissedCleavages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxFixedModification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxVariableModification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldContaminantsThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel10))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldTopHits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldSignificanceThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(jButtonSearch))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxShowMatchedPeptides)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxShowMatchedProteins))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldExperementName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldProteinDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jButtonOpenProteinDB))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonOpenDecoyDB)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldDecoyDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldMassList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonOpenMassList)
                                    .addComponent(jButtonIhaveaList)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldContaminantsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonOpenContaminantsList)
                                    .addComponent(jLabel6)))))
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDecreaseTextSize, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonIncreaseTextSize, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPrintResults)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSaveAs)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    private void jButtonOpenProteinDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenProteinDBActionPerformed
        // TODO add your handling code here:
        proteinDB = selectFile(jTextFieldProteinDatabase);
    }//GEN-LAST:event_jButtonOpenProteinDBActionPerformed

    private void jButtonOpenDecoyDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenDecoyDBActionPerformed
        // TODO add your handling code here:
        decoyDB = selectFile(jTextFieldDecoyDatabase);

    }//GEN-LAST:event_jButtonOpenDecoyDBActionPerformed

    private void jButtonOpenMassListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenMassListActionPerformed
        // TODO add your handling code here:
        massList = selectFile(jTextFieldMassList);

    }//GEN-LAST:event_jButtonOpenMassListActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        // here goes to search for the protien
        if(checkFrameData()){
            try {
                ProteinFinder.search(this);
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            } catch (BioException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonPrintResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintResultsActionPerformed
        try {
            // TODO add your handling code here:
            jTextPaneResult.print();
        } catch (PrinterException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jButtonPrintResultsActionPerformed

    private void jButtonSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAsActionPerformed
        if (jTextPaneResult.getText().length() > 0){

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setMultiSelectionEnabled(false);        
            FileNameExtensionFilter rtfFilter = new FileNameExtensionFilter("rtf files (*.rtf)", "rtf");
            fileChooser.addChoosableFileFilter(rtfFilter);
            fileChooser.setFileFilter(rtfFilter);
            int option = fileChooser.showSaveDialog(this);

            if (option == JFileChooser.APPROVE_OPTION) {

                StyledDocument doc = (StyledDocument)jTextPaneResult.getDocument();

                HTMLEditorKit kit = new HTMLEditorKit();

                BufferedOutputStream out;

                try {
                    out = new BufferedOutputStream(new FileOutputStream(fileChooser.getSelectedFile().getAbsoluteFile()));

                    kit.write(out, doc, doc.getStartPosition().getOffset(), doc.getLength());

                } catch (FileNotFoundException e) {

                } catch (IOException e){

                } catch (BadLocationException e){

                }
            }
        }
    }//GEN-LAST:event_jButtonSaveAsActionPerformed

    private void jButtonOpenContaminantsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenContaminantsListActionPerformed

        contaminantsList = selectFile(jTextFieldContaminantsList);
    }//GEN-LAST:event_jButtonOpenContaminantsListActionPerformed

    private void jCheckBoxShowMatchedProteinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowMatchedProteinsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxShowMatchedProteinsActionPerformed

    private void jButtonIncreaseTextSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncreaseTextSizeActionPerformed
        increaseResultsFontSize();
        
    }//GEN-LAST:event_jButtonIncreaseTextSizeActionPerformed

    private void jButtonDecreaseTextSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecreaseTextSizeActionPerformed
    
        decreaseResultsFontSize();
    }//GEN-LAST:event_jButtonDecreaseTextSizeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDecreaseTextSize;
    private javax.swing.JButton jButtonIhaveaList;
    private javax.swing.JButton jButtonIncreaseTextSize;
    private javax.swing.JButton jButtonOpenContaminantsList;
    private javax.swing.JButton jButtonOpenDecoyDB;
    private javax.swing.JButton jButtonOpenMassList;
    private javax.swing.JButton jButtonOpenProteinDB;
    private javax.swing.JButton jButtonPrintResults;
    private javax.swing.JButton jButtonSaveAs;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxShowMatchedPeptides;
    private javax.swing.JCheckBox jCheckBoxShowMatchedProteins;
    private javax.swing.JComboBox jComboBoxFixedModification;
    private javax.swing.JComboBox jComboBoxVariableModification;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextFieldContaminantsList;
    private javax.swing.JTextField jTextFieldContaminantsThreshold;
    private javax.swing.JTextField jTextFieldDecoyDatabase;
    private javax.swing.JTextField jTextFieldExperementName;
    private javax.swing.JTextField jTextFieldMassList;
    private javax.swing.JTextField jTextFieldNoMissedCleavages;
    private javax.swing.JTextField jTextFieldProteinDatabase;
    private javax.swing.JTextField jTextFieldProteinDatabaseThreshold;
    private javax.swing.JTextField jTextFieldSignificanceThreshold;
    private javax.swing.JTextField jTextFieldTopHits;
    private javax.swing.JTextPane jTextPaneResult;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component 
        jTextFieldExperementName.setText("search_"+ String.valueOf(Math.abs(new Random().nextInt())));
      
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public File getProteinDB() {
        return proteinDB;
    }

    public File getDecoyDB() {
        return decoyDB;
    }

    public File getMassList() {
        return massList;
    }

    public File getContaminantsList() {
        return contaminantsList;
    }
    
    
    
    
    public float getContaminantsThreshold () throws NumberFormatException{
        return Float.parseFloat(jTextFieldContaminantsThreshold.getText());
    }
    
    public float getDatabaseThreshold()throws NumberFormatException{
        return Float.parseFloat(jTextFieldProteinDatabaseThreshold.getText());
    }
    
    public int getNoMissedCleavages()throws NumberFormatException {
        return Integer.parseInt(jTextFieldNoMissedCleavages.getText());
    }
    
    public int getMaximumNoHits() throws NumberFormatException{
        return Integer.parseInt(jTextFieldTopHits.getText());
    }
    
    public float getSignificanceThreshold() throws NumberFormatException {
        return Float.parseFloat(jTextFieldSignificanceThreshold.getText());
    }
    
    public boolean isFixedModified() {
        return (jComboBoxFixedModification.getSelectedIndex()==1);
    }
    
    public boolean isVariableModified(){
        return (jComboBoxVariableModification.getSelectedIndex()==1);
    }
    
    public boolean isShowMatchedPepitides(){
        return jCheckBoxShowMatchedPeptides.isSelected();
    }
    
    public boolean isShowMatchedProteins(){
        return jCheckBoxShowMatchedProteins.isSelected();
    }
    
    /* Helper methods */
    private File selectFile(JTextField textField){
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if(jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            textField.setText(file.getAbsolutePath());
            return file;
            }
        return null;
    }
    
    private boolean checkFrameData(){
        if(proteinDB == null || !proteinDB.exists()){
            JOptionPane.showMessageDialog(this, "Invalid protein database file!");
            jTextFieldProteinDatabase.requestFocus();
            return false;
        }
        
        if(decoyDB == null || !decoyDB.exists()){
            JOptionPane.showMessageDialog(this, "Invalid decoy database file!");
            jTextFieldDecoyDatabase.requestFocus();
            return false;
        }
        
        if(massList == null || !massList.exists()){
            JOptionPane.showMessageDialog(this, "Invalid mass list file/folder!");
            jTextFieldMassList.requestFocus();
            return false;
        }
        
        if(proteinDB.getAbsolutePath().equals(decoyDB.getAbsolutePath())){
            JOptionPane.showMessageDialog(this, "Protein database can be equal the decoy database!");
            jTextFieldProteinDatabase.requestFocus();
            jTextFieldDecoyDatabase.requestFocus();
            return false;
        }
        
        try{
            float threshold = getDatabaseThreshold();
            if(threshold < 0) throw new NumberFormatException();
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid DB threshold!");
             jTextFieldProteinDatabaseThreshold.requestFocus();
             return false;
        }
        
        try{
            float threshold = getContaminantsThreshold();
            if(threshold < 0) throw new NumberFormatException();
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid contaminants threshold!");
             jTextFieldContaminantsThreshold.requestFocus();
             return false;
        }
        
        try{
            int threshold = getNoMissedCleavages();
            if(threshold < 0) throw new NumberFormatException();
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid missed cleavages number!");
             jTextFieldNoMissedCleavages.requestFocus();
             return false;
        }
        
        try{
            int threshold = getMaximumNoHits();
            if(threshold < 0) throw new NumberFormatException();
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid report to hist!");
             jTextFieldTopHits.requestFocus();
             return false;
        }
        
        try{
            float threshold = getSignificanceThreshold();
            if(threshold < 0.0f || threshold > 1.0f) throw new NumberFormatException();
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid significance threshold!");
             jTextFieldSignificanceThreshold.requestFocus();
             return false;
        }
        
        
        
        
        return true;
            
    }
 
    
    public void appendResult(String msg, Color c)
    {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);
        aset = sc.addAttribute(aset, StyleConstants.FontSize, 13);
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_LEFT);
        
        
        int len = jTextPaneResult.getDocument().getLength();
        jTextPaneResult.setCaretPosition(len);
        jTextPaneResult.setCharacterAttributes(aset, false);
        jTextPaneResult.replaceSelection(msg);
    }
    
    
    public void appendResult(String msg, Color fc, Color bc)
    {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, fc);
        aset = sc.addAttribute(aset, StyleConstants.Background, bc);
        aset = sc.addAttribute(aset, StyleConstants.FontSize, 13);
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_LEFT);
        
        
        int len = jTextPaneResult.getDocument().getLength();
        jTextPaneResult.setCaretPosition(len);
        jTextPaneResult.setCharacterAttributes(aset, false);
        jTextPaneResult.replaceSelection(msg);
    }
    
    
    
    

public void increaseResultsFontSize() {
   
    MutableAttributeSet attrs = jTextPaneResult.getInputAttributes();
    //first get the current size of the font
    int size = StyleConstants.getFontSize(attrs);

    //now increase by 2 (or whatever factor you like)
    StyleConstants.setFontSize(attrs, size * 2);

    StyledDocument doc = jTextPaneResult.getStyledDocument();
    doc.setCharacterAttributes(0, doc.getLength() + 1, attrs, false);
}


public void decreaseResultsFontSize() {
    MutableAttributeSet attrs = jTextPaneResult.getInputAttributes();
    //first get the current size of the font
    int size = StyleConstants.getFontSize(attrs);

    //now increase by 2 (or whatever factor you like)
    StyleConstants.setFontSize(attrs, size / 2);

    StyledDocument doc = jTextPaneResult.getStyledDocument();
    doc.setCharacterAttributes(0, doc.getLength() + 1, attrs, false);
}

    

}
